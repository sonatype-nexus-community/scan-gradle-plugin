/*
 * Copyright (c) 2020-present Sonatype, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sonatype.gradle.plugins.scan.ossindex;

import java.util.Objects;

public class VulnerabilityUtils
{
  private static Float CRITICAL_SCORE = 9f;

  private static Float HIGH_SCORE = 7f;

  private static Float MEDIUM_SCORE = 4f;

  static final String ASCII_COLOR_RED = "\033[31m";

  static final String ASCII_COLOR_YELLOW = "\033[33m";

  static final String ASCII_COLOR_GREEN = "\033[32m";

  static final String ASCII_COLOR_RESET = "\033[0m";

  private VulnerabilityUtils() {
    // Utils class
  }

  public static String addColorBasedOnCvssScore(Float cvssScore, String cvssDescription) {
    if (Objects.isNull(cvssScore) || Objects.isNull(cvssDescription)) {
      return null;
    }

    if (cvssScore.compareTo(CRITICAL_SCORE) >= 0) {
      return ASCII_COLOR_RED + cvssDescription + ASCII_COLOR_RESET;
    }
    else if (cvssScore.compareTo(HIGH_SCORE) >= 0) {
      return ASCII_COLOR_RED + cvssDescription + ASCII_COLOR_RESET;
    }
    else if (cvssScore.compareTo(MEDIUM_SCORE) >= 0) {
      return ASCII_COLOR_YELLOW + cvssDescription + ASCII_COLOR_RESET;
    }
    else {
      return ASCII_COLOR_GREEN + cvssDescription + ASCII_COLOR_RESET;
    }
  }

  public static String getAssessment(Float cvssScore) {
    if (Objects.isNull(cvssScore)) {
      return null;
    }

    if (cvssScore.compareTo(CRITICAL_SCORE) >= 0) {
      return "Critical";
    }
    else if (cvssScore.compareTo(HIGH_SCORE) >= 0) {
      return "High";
    }
    else if (cvssScore.compareTo(MEDIUM_SCORE) >= 0) {
      return "Medium";
    }
    else {
      return "Low";
    }
  }
}
