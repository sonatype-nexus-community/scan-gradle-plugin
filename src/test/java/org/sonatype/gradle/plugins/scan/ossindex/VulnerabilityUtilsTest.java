/*
 * Copyright (c) 2020-present Sonatype, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sonatype.gradle.plugins.scan.ossindex;

import java.util.stream.IntStream;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class VulnerabilityUtilsTest
{
  @Test
  public void testGetAssessment_Null() {
    assertThat(VulnerabilityUtils.getAssessment(null)).isNull();
  }

  @Test
  public void testAddColorBasedONCvssScore_Null() {
    assertThat(VulnerabilityUtils.addColorBasedOnCvssScore(null, "example")).isNull();
    assertThat(VulnerabilityUtils.addColorBasedOnCvssScore(0f, null)).isNull();
  }

  @Test
  public void testVulnerabilityUtils_Low() {
    IntStream.range(1, 3).forEach(score -> assertVulnerability(score, "Low", VulnerabilityUtils.ASCII_COLOR_YELLOW));
  }

  @Test
  public void testVulnerabilityUtils_Medium() {
    IntStream.range(4, 6).forEach(score -> assertVulnerability(score, "Medium", VulnerabilityUtils.ASCII_COLOR_ORANGE));
  }

  @Test
  public void testVulnerabilityUtils_High() {
    IntStream.range(7, 8).forEach(score -> assertVulnerability(score, "High", VulnerabilityUtils.ASCII_COLOR_RED));
  }

  @Test
  public void testVulnerabilityUtils_Critical() {
    IntStream.range(8, 10).forEach(score -> assertVulnerability(score, "Critical", VulnerabilityUtils.ASCII_COLOR_RED));
  }

  private void assertVulnerability(float score, String assessment, String color) {
    assertThat(VulnerabilityUtils.getAssessment(score)).isEqualTo(assessment);
    assertThat(VulnerabilityUtils.addColorBasedOnCvssScore(score, "example")).startsWith(color);
  }
}
