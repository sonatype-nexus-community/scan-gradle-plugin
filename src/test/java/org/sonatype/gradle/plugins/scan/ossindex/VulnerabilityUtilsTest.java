/*
 * Copyright (c) 2020-present Sonatype, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sonatype.gradle.plugins.scan.ossindex;

import java.util.stream.IntStream;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class VulnerabilityUtilsTest
{
  @Test
  public void testGetAssessment_null() {
    assertThat(VulnerabilityUtils.getAssessment(null)).isNull();
  }

  @Test
  public void testGetAssessment_Low() {
    IntStream.range(1, 3).forEach(score -> testGetAssessment((float) score, "Low"));
  }

  @Test
  public void testGetAssessment_Medium() {
    IntStream.range(4, 7).forEach(score -> testGetAssessment((float) score, "Medium"));
  }

  @Test
  public void testGetAssessment_High() {
    testGetAssessment(8f, "High");
  }

  @Test
  public void testGetAssessment_Critical() {
    IntStream.range(9, 10).forEach(score -> testGetAssessment((float) score, "Critical"));
  }

  private void testGetAssessment(Float score, String expected) {
    assertThat(VulnerabilityUtils.getAssessment(score)).isEqualTo(expected);
  }

}