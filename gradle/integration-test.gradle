sourceSets {
  integrationTest {
    java.srcDir file('src/integTest/java')
    resources.srcDir file('src/integTest/resources')
    compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
    runtimeClasspath += output + compileClasspath
  }
}

task integrationTest(type: Test) {
  description = 'Runs the integration tests.'
  group = 'verification'
}

['**/ScanIT_Gradle_Versions_5_0*.class',
 '**/ScanIT_Gradle_Versions_5_5*.class',
 '**/ScanIT_Gradle_Versions_6_0*.class',
 '**/ScanIT_Gradle_Versions_7_6*.class',
 '**/ScanIT_Gradle_Versions_8_3*.class',
 '**/ScanIT_Gradle_Versions_8_6*.class'].eachWithIndex { className, index ->
  task "it${index + 1}"(type: Test) {
    includes = [className]
    description = "Runs the integration tests on class $className."
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    maxHeapSize = '1536m'
    mustRunAfter test
  }

  integrationTest.dependsOn "it${index + 1}"
}

check.dependsOn integrationTest
